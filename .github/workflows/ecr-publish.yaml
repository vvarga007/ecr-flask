name: Docker image build and publish
on:
  workflow_dispatch:
    inputs:
      aws_account_id:
        description: AWS Account ID
        type: string
        default: "797893214126"

jobs:
  image-build:
    runs-on: ubuntu-latest

    permissions:
      id-token: write
      contents: read

    outputs:
      image_tag: ${{ steps.build-publish.outputs.image_tag }}
      full_image: ${{ steps.build-publish.outputs.full_image }}

    steps:
      - uses: actions/checkout@v3

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v4

        with:
          aws-region: "us-east-1"
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}

      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v1
        with:
          registries: ${{ inputs.aws_account_id }}
          mask-password: "true" # see: https://github.com/aws-actions/amazon-ecr-login#docker-credentials

      - name: Build, tag, and push image to Amazon ECR
        id: build-publish
        shell: bash
        env:
          ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
          ECR_REPOSITORY: "flask_app"
        run: |
          docker build "app" -f "app/Dockerfile" -t "$ECR_REGISTRY/$ECR_REPOSITORY"
          docker push "$ECR_REGISTRY/$ECR_REPOSITORY"
          echo "Image is pushed to $ECR_REGISTRY/$ECR_REPOSITORY"
